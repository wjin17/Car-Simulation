/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./node_modules/css-loader/dist/cjs.js!./css/style.css":
/*!*************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./css/style.css ***!
  \*************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../node_modules/css-loader/dist/runtime/noSourceMaps.js */ \"./node_modules/css-loader/dist/runtime/noSourceMaps.js\");\n/* harmony import */ var _node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../node_modules/css-loader/dist/runtime/api.js */ \"./node_modules/css-loader/dist/runtime/api.js\");\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);\n// Imports\n\n\nvar ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));\n___CSS_LOADER_EXPORT___.push([module.id, \"@import url(https://fonts.googleapis.com/css2?family=Roboto+Mono:ital,wght@0,100;0,300;0,400;0,500;0,600;1,700&display=swap);\"]);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"html {\\n  font-family: \\\"Roboto Mono\\\", monospace;\\n  height: 100vh;\\n  width: 100vw;\\n  min-width: 414px;\\n  overflow: hidden;\\n}\\n\\nbody {\\n  margin: 0;\\n  height: 100%;\\n  max-width: 100vw;\\n}\\n\\n#simulation-container {\\n  height: 100%;\\n  width: 100%;\\n  display: flex;\\n  flex-direction: column;\\n  justify-content: center;\\n  align-items: center;\\n}\\n\\n[data-mode=\\\"manual\\\"] #carCanvas {\\n  background: #14532d;\\n  width: 100%;\\n  height: calc(100% - 4rem);\\n}\\n\\n[data-mode=\\\"manual\\\"] #networkCanvas {\\n  display: none;\\n}\\n\\n[data-mode=\\\"manual\\\"] #training-size-setting {\\n  display: none;\\n}\\n\\n[data-mode=\\\"self-driving\\\"] #carCanvas {\\n  background: #14532d;\\n  width: 100%;\\n  height: calc(50% - 2rem);\\n}\\n\\n[data-mode=\\\"self-driving\\\"] #networkCanvas {\\n  background: black;\\n  width: 100%;\\n  height: calc(50% - 2rem);\\n}\\n\\n[data-mode=\\\"self-driving\\\"] #training-size-setting {\\n  display: block;\\n}\\n\\n#buttons {\\n  display: flex;\\n  flex-direction: row;\\n}\\n\\nbutton {\\n  background-color: white;\\n  padding: 0.5rem;\\n  border: none;\\n  cursor: pointer;\\n}\\n\\n.control-button {\\n  border-radius: 5px;\\n  margin: 1rem;\\n  font-size: 1.5rem;\\n}\\n\\n.control-button:hover {\\n  background: lightgray;\\n}\\n\\n.modal {\\n  display: none;\\n  position: fixed;\\n  z-index: 1;\\n  left: 0;\\n  top: 0;\\n  width: 100%;\\n  height: 100%;\\n  overflow: auto;\\n  background-color: rgb(0, 0, 0);\\n  background-color: rgba(0, 0, 0, 0.4);\\n}\\n\\n.modal-title {\\n  display: flex;\\n  justify-content: space-between;\\n  align-items: center;\\n}\\n\\n.modal-title h1,\\n.modal-title button {\\n  margin: 0;\\n  padding: 0;\\n}\\n\\n.modal-content {\\n  position: absolute;\\n  background-color: #fefefe;\\n  top: 50%;\\n  left: 50%;\\n  translate: -50% -50%;\\n  padding: 20px;\\n  border: 1px solid #888;\\n  width: 80%;\\n  max-width: 640px;\\n  border-radius: 15px;\\n}\\n\\n#close-modal-button {\\n  margin-right: 1rem;\\n  color: black;\\n  font-size: 2rem;\\n  font-weight: bold;\\n}\\n\\n#close-modal-button:hover,\\n#close-modal-button:focus {\\n  color: #aaa;\\n  text-decoration: none;\\n  cursor: pointer;\\n}\\n\\n/* CSS */\\n.setting-button,\\n.track-button {\\n  font-size: 16px;\\n  letter-spacing: 2px;\\n  text-decoration: none;\\n  text-transform: uppercase;\\n  color: #000;\\n  border: 3px solid;\\n  padding: 0.25em 0.5em;\\n  box-shadow: 1px 1px 0px 0px, 2px 2px 0px 0px, 3px 3px 0px 0px, 4px 4px 0px 0px,\\n    5px 5px 0px 0px;\\n  position: relative;\\n  user-select: none;\\n  -webkit-user-select: none;\\n  touch-action: manipulation;\\n  margin-bottom: 1rem;\\n  margin-right: 1rem;\\n}\\n\\nbutton:active,\\n.setting-button.active,\\n.track-button.active {\\n  box-shadow: 0px 0px 0px 0px;\\n  top: 5px;\\n  left: 5px;\\n}\\n\\ninput {\\n  outline: none;\\n  font-size: 16px;\\n  letter-spacing: 2px;\\n  text-decoration: none;\\n  text-transform: uppercase;\\n  color: #000;\\n  border: 3px solid;\\n  padding: 0.25em 0.5em;\\n  box-shadow: 1px 1px 0px 0px, 2px 2px 0px 0px, 3px 3px 0px 0px, 4px 4px 0px 0px,\\n    5px 5px 0px 0px;\\n  position: relative;\\n  user-select: none;\\n  -webkit-user-select: none;\\n  margin-bottom: 1rem;\\n  margin-right: 1rem;\\n}\\n\\n@media (min-width: 1024px) {\\n  #simulation-container {\\n    flex-direction: row;\\n  }\\n\\n  #buttons {\\n    flex-direction: column;\\n  }\\n\\n  [data-mode=\\\"manual\\\"] #carCanvas {\\n    background: #14532d;\\n    width: calc(100% - 4rem);\\n    height: 100%;\\n  }\\n\\n  [data-mode=\\\"self-driving\\\"] #carCanvas {\\n    background: #14532d;\\n    width: calc(50% - 2rem);\\n    height: 100%;\\n  }\\n\\n  [data-mode=\\\"self-driving\\\"] #networkCanvas {\\n    background: black;\\n    width: calc(50% - 2rem);\\n    height: 100%;\\n  }\\n}\\n\", \"\"]);\n// Exports\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);\n\n\n//# sourceURL=webpack://self-driving/./css/style.css?./node_modules/css-loader/dist/cjs.js");

/***/ }),

/***/ "./node_modules/css-loader/dist/runtime/api.js":
/*!*****************************************************!*\
  !*** ./node_modules/css-loader/dist/runtime/api.js ***!
  \*****************************************************/
/***/ ((module) => {

eval("\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\nmodule.exports = function (cssWithMappingToString) {\n  var list = [];\n\n  // return the list of modules as css string\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = \"\";\n      var needLayer = typeof item[5] !== \"undefined\";\n      if (item[4]) {\n        content += \"@supports (\".concat(item[4], \") {\");\n      }\n      if (item[2]) {\n        content += \"@media \".concat(item[2], \" {\");\n      }\n      if (needLayer) {\n        content += \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\");\n      }\n      content += cssWithMappingToString(item);\n      if (needLayer) {\n        content += \"}\";\n      }\n      if (item[2]) {\n        content += \"}\";\n      }\n      if (item[4]) {\n        content += \"}\";\n      }\n      return content;\n    }).join(\"\");\n  };\n\n  // import a list of modules into the list\n  list.i = function i(modules, media, dedupe, supports, layer) {\n    if (typeof modules === \"string\") {\n      modules = [[null, modules, undefined]];\n    }\n    var alreadyImportedModules = {};\n    if (dedupe) {\n      for (var k = 0; k < this.length; k++) {\n        var id = this[k][0];\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n    for (var _k = 0; _k < modules.length; _k++) {\n      var item = [].concat(modules[_k]);\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        continue;\n      }\n      if (typeof layer !== \"undefined\") {\n        if (typeof item[5] === \"undefined\") {\n          item[5] = layer;\n        } else {\n          item[1] = \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\").concat(item[1], \"}\");\n          item[5] = layer;\n        }\n      }\n      if (media) {\n        if (!item[2]) {\n          item[2] = media;\n        } else {\n          item[1] = \"@media \".concat(item[2], \" {\").concat(item[1], \"}\");\n          item[2] = media;\n        }\n      }\n      if (supports) {\n        if (!item[4]) {\n          item[4] = \"\".concat(supports);\n        } else {\n          item[1] = \"@supports (\".concat(item[4], \") {\").concat(item[1], \"}\");\n          item[4] = supports;\n        }\n      }\n      list.push(item);\n    }\n  };\n  return list;\n};\n\n//# sourceURL=webpack://self-driving/./node_modules/css-loader/dist/runtime/api.js?");

/***/ }),

/***/ "./node_modules/css-loader/dist/runtime/noSourceMaps.js":
/*!**************************************************************!*\
  !*** ./node_modules/css-loader/dist/runtime/noSourceMaps.js ***!
  \**************************************************************/
/***/ ((module) => {

eval("\n\nmodule.exports = function (i) {\n  return i[1];\n};\n\n//# sourceURL=webpack://self-driving/./node_modules/css-loader/dist/runtime/noSourceMaps.js?");

/***/ }),

/***/ "./css/style.css":
/*!***********************!*\
  !*** ./css/style.css ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! !../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js */ \"./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! !../node_modules/style-loader/dist/runtime/styleDomAPI.js */ \"./node_modules/style-loader/dist/runtime/styleDomAPI.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! !../node_modules/style-loader/dist/runtime/insertBySelector.js */ \"./node_modules/style-loader/dist/runtime/insertBySelector.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! !../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js */ \"./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! !../node_modules/style-loader/dist/runtime/insertStyleElement.js */ \"./node_modules/style-loader/dist/runtime/insertStyleElement.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! !../node_modules/style-loader/dist/runtime/styleTagTransform.js */ \"./node_modules/style-loader/dist/runtime/styleTagTransform.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var _node_modules_css_loader_dist_cjs_js_style_css__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! !!../node_modules/css-loader/dist/cjs.js!./style.css */ \"./node_modules/css-loader/dist/cjs.js!./css/style.css\");\n\n      \n      \n      \n      \n      \n      \n      \n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = (_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default());\noptions.setAttributes = (_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default());\n\n      options.insert = _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default().bind(null, \"head\");\n    \noptions.domAPI = (_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default());\noptions.insertStyleElement = (_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default());\n\nvar update = _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default()(_node_modules_css_loader_dist_cjs_js_style_css__WEBPACK_IMPORTED_MODULE_6__[\"default\"], options);\n\n\n\n\n       /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_node_modules_css_loader_dist_cjs_js_style_css__WEBPACK_IMPORTED_MODULE_6__[\"default\"] && _node_modules_css_loader_dist_cjs_js_style_css__WEBPACK_IMPORTED_MODULE_6__[\"default\"].locals ? _node_modules_css_loader_dist_cjs_js_style_css__WEBPACK_IMPORTED_MODULE_6__[\"default\"].locals : undefined);\n\n\n//# sourceURL=webpack://self-driving/./css/style.css?");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js":
/*!****************************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js ***!
  \****************************************************************************/
/***/ ((module) => {

eval("\n\nvar stylesInDOM = [];\n\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n\n  for (var i = 0; i < stylesInDOM.length; i++) {\n    if (stylesInDOM[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n\n  return result;\n}\n\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = \"\".concat(id, \" \").concat(count);\n    idCountMap[id] = count + 1;\n    var indexByIdentifier = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3],\n      supports: item[4],\n      layer: item[5]\n    };\n\n    if (indexByIdentifier !== -1) {\n      stylesInDOM[indexByIdentifier].references++;\n      stylesInDOM[indexByIdentifier].updater(obj);\n    } else {\n      var updater = addElementStyle(obj, options);\n      options.byIndex = i;\n      stylesInDOM.splice(i, 0, {\n        identifier: identifier,\n        updater: updater,\n        references: 1\n      });\n    }\n\n    identifiers.push(identifier);\n  }\n\n  return identifiers;\n}\n\nfunction addElementStyle(obj, options) {\n  var api = options.domAPI(options);\n  api.update(obj);\n\n  var updater = function updater(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap && newObj.supports === obj.supports && newObj.layer === obj.layer) {\n        return;\n      }\n\n      api.update(obj = newObj);\n    } else {\n      api.remove();\n    }\n  };\n\n  return updater;\n}\n\nmodule.exports = function (list, options) {\n  options = options || {};\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDOM[index].references--;\n    }\n\n    var newLastIdentifiers = modulesToDom(newList, options);\n\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n\n      var _index = getIndexByIdentifier(_identifier);\n\n      if (stylesInDOM[_index].references === 0) {\n        stylesInDOM[_index].updater();\n\n        stylesInDOM.splice(_index, 1);\n      }\n    }\n\n    lastIdentifiers = newLastIdentifiers;\n  };\n};\n\n//# sourceURL=webpack://self-driving/./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js?");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/insertBySelector.js":
/*!********************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/insertBySelector.js ***!
  \********************************************************************/
/***/ ((module) => {

eval("\n\nvar memo = {};\n/* istanbul ignore next  */\n\nfunction getTarget(target) {\n  if (typeof memo[target] === \"undefined\") {\n    var styleTarget = document.querySelector(target); // Special case to return head of iframe instead of iframe itself\n\n    if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n      try {\n        // This will throw an exception if access to iframe is blocked\n        // due to cross-origin restrictions\n        styleTarget = styleTarget.contentDocument.head;\n      } catch (e) {\n        // istanbul ignore next\n        styleTarget = null;\n      }\n    }\n\n    memo[target] = styleTarget;\n  }\n\n  return memo[target];\n}\n/* istanbul ignore next  */\n\n\nfunction insertBySelector(insert, style) {\n  var target = getTarget(insert);\n\n  if (!target) {\n    throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n  }\n\n  target.appendChild(style);\n}\n\nmodule.exports = insertBySelector;\n\n//# sourceURL=webpack://self-driving/./node_modules/style-loader/dist/runtime/insertBySelector.js?");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/insertStyleElement.js":
/*!**********************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/insertStyleElement.js ***!
  \**********************************************************************/
/***/ ((module) => {

eval("\n\n/* istanbul ignore next  */\nfunction insertStyleElement(options) {\n  var element = document.createElement(\"style\");\n  options.setAttributes(element, options.attributes);\n  options.insert(element, options.options);\n  return element;\n}\n\nmodule.exports = insertStyleElement;\n\n//# sourceURL=webpack://self-driving/./node_modules/style-loader/dist/runtime/insertStyleElement.js?");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js ***!
  \**********************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\n/* istanbul ignore next  */\nfunction setAttributesWithoutAttributes(styleElement) {\n  var nonce =  true ? __webpack_require__.nc : 0;\n\n  if (nonce) {\n    styleElement.setAttribute(\"nonce\", nonce);\n  }\n}\n\nmodule.exports = setAttributesWithoutAttributes;\n\n//# sourceURL=webpack://self-driving/./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js?");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/styleDomAPI.js":
/*!***************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/styleDomAPI.js ***!
  \***************************************************************/
/***/ ((module) => {

eval("\n\n/* istanbul ignore next  */\nfunction apply(styleElement, options, obj) {\n  var css = \"\";\n\n  if (obj.supports) {\n    css += \"@supports (\".concat(obj.supports, \") {\");\n  }\n\n  if (obj.media) {\n    css += \"@media \".concat(obj.media, \" {\");\n  }\n\n  var needLayer = typeof obj.layer !== \"undefined\";\n\n  if (needLayer) {\n    css += \"@layer\".concat(obj.layer.length > 0 ? \" \".concat(obj.layer) : \"\", \" {\");\n  }\n\n  css += obj.css;\n\n  if (needLayer) {\n    css += \"}\";\n  }\n\n  if (obj.media) {\n    css += \"}\";\n  }\n\n  if (obj.supports) {\n    css += \"}\";\n  }\n\n  var sourceMap = obj.sourceMap;\n\n  if (sourceMap && typeof btoa !== \"undefined\") {\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\n  } // For old IE\n\n  /* istanbul ignore if  */\n\n\n  options.styleTagTransform(css, styleElement, options.options);\n}\n\nfunction removeStyleElement(styleElement) {\n  // istanbul ignore if\n  if (styleElement.parentNode === null) {\n    return false;\n  }\n\n  styleElement.parentNode.removeChild(styleElement);\n}\n/* istanbul ignore next  */\n\n\nfunction domAPI(options) {\n  var styleElement = options.insertStyleElement(options);\n  return {\n    update: function update(obj) {\n      apply(styleElement, options, obj);\n    },\n    remove: function remove() {\n      removeStyleElement(styleElement);\n    }\n  };\n}\n\nmodule.exports = domAPI;\n\n//# sourceURL=webpack://self-driving/./node_modules/style-loader/dist/runtime/styleDomAPI.js?");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/styleTagTransform.js":
/*!*********************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/styleTagTransform.js ***!
  \*********************************************************************/
/***/ ((module) => {

eval("\n\n/* istanbul ignore next  */\nfunction styleTagTransform(css, styleElement) {\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css;\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild);\n    }\n\n    styleElement.appendChild(document.createTextNode(css));\n  }\n}\n\nmodule.exports = styleTagTransform;\n\n//# sourceURL=webpack://self-driving/./node_modules/style-loader/dist/runtime/styleTagTransform.js?");

/***/ }),

/***/ "./src/app.ts":
/*!********************!*\
  !*** ./src/app.ts ***!
  \********************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n__webpack_require__(/*! ../css/style.css */ \"./css/style.css\");\nvar Controller_1 = __webpack_require__(/*! ./classes/Simulation/Controller */ \"./src/classes/Simulation/Controller.ts\");\nvar modal = document.getElementById(\"modal\");\nconsole.log(\"begin\");\nvar controller = new Controller_1.SimulationController();\ncontroller.start();\nfunction documentButtons() {\n    document.getElementById(\"reset\").onclick = function () {\n        controller.resetSimulation();\n    };\n    document.getElementById(\"save\").onclick = function () {\n        console.log(\"save!\");\n    };\n    document.getElementById(\"discard\").onclick = function () {\n        console.log(\"discard!\");\n    };\n    document.getElementById(\"settings\").onclick = function () {\n        console.log(\"settings!\");\n        if (modal)\n            modal.style.display = \"block\";\n    };\n    document.getElementById(\"close-modal-button\").onclick = function () {\n        if (modal)\n            modal.style.display = \"none\";\n    };\n    window.onclick = function (event) {\n        if (event.target == modal) {\n            if (modal)\n                modal.style.display = \"none\";\n        }\n    };\n}\ndocumentButtons();\n\n\n//# sourceURL=webpack://self-driving/./src/app.ts?");

/***/ }),

/***/ "./src/classes/Car.ts":
/*!****************************!*\
  !*** ./src/classes/Car.ts ***!
  \****************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Car = void 0;\nvar Controls_1 = __webpack_require__(/*! ./Controls */ \"./src/classes/Controls.ts\");\nvar LaneSensor_1 = __webpack_require__(/*! ./Sensors/LaneSensor */ \"./src/classes/Sensors/LaneSensor.ts\");\nvar RoadSensor_1 = __webpack_require__(/*! ./Sensors/RoadSensor */ \"./src/classes/Sensors/RoadSensor.ts\");\nvar intersections_1 = __webpack_require__(/*! ../utils/intersections */ \"./src/utils/intersections.ts\");\nvar distance_1 = __webpack_require__(/*! ../utils/distance */ \"./src/utils/distance.ts\");\nvar Car = /** @class */ (function () {\n    function Car(plane, startX, startY, maxSpeed, specimenId, angle, controlType) {\n        this.width = 40;\n        this.height = 70;\n        this.angle = 0;\n        this.polygon = [];\n        this.speed = 0;\n        this.acceleration = 0.2;\n        this.break = 0.05;\n        this.collision = false;\n        this.distance = 0;\n        this.specimenId = 0;\n        this.plane = plane;\n        this.x = startX;\n        this.y = startY;\n        if (angle)\n            this.angle = angle;\n        this.maxSpeed = maxSpeed;\n        this.specimenId = specimenId;\n        this.controlType = controlType || \"dummy\" /* CONTROLS.DUMMY */;\n        this.polygon = this.generateCar();\n        if (controlType == \"dummy\" /* CONTROLS.DUMMY */) {\n            this.laneSensor = new LaneSensor_1.LaneSensor(this, plane);\n            this.controls = new Controls_1.Controls(controlType);\n        }\n        else if (controlType == \"lane-assist\" /* CONTROLS.LANE_ASSIST */) {\n            this.laneSensor = new LaneSensor_1.LaneSensor(this, plane);\n            this.controls = new Controls_1.Controls(controlType);\n        }\n        else if (controlType == \"self-driving\" /* CONTROLS.SELF_DRIVING */) {\n            this.roadSensor = new RoadSensor_1.RoadSensor(this, plane);\n            this.controls = new Controls_1.Controls(controlType, this.roadSensor.rayCount);\n        }\n        else if (controlType == \"full-self-driving\" /* CONTROLS.FULL_SELF_DRIVING */) {\n            this.roadSensor = new RoadSensor_1.RoadSensor(this, plane);\n            this.laneSensor = new LaneSensor_1.LaneSensor(this, plane);\n            this.controls = new Controls_1.Controls(controlType, this.roadSensor.rayCount);\n        }\n        else {\n            //this.laneSensor = new LaneSensor(this, plane);\n            this.controls = new Controls_1.Controls(controlType);\n        }\n    }\n    // distance could be dist += Math.abs(this.speed)\n    Car.prototype.generateCar = function () {\n        var points = [];\n        var rad = Math.hypot(this.width, this.height / 2);\n        var alpha = Math.atan2(this.width, this.height);\n        points.push({\n            x: this.x + Math.sin(this.angle - alpha) * rad,\n            y: this.y + Math.cos(this.angle - alpha) * rad,\n        });\n        points.push({\n            x: this.x + Math.sin(this.angle + alpha) * rad,\n            y: this.y + Math.cos(this.angle + alpha) * rad,\n        });\n        points.push({\n            x: this.x + Math.sin(Math.PI + this.angle - alpha) * rad,\n            y: this.y + Math.cos(Math.PI + this.angle - alpha) * rad,\n        });\n        points.push({\n            x: this.x + Math.sin(Math.PI + this.angle + alpha) * rad,\n            y: this.y + Math.cos(Math.PI + this.angle + alpha) * rad,\n        });\n        return points;\n    };\n    Car.prototype.detectCollision = function (car) {\n        return (0, intersections_1.polygonsIntersect)(car.polygon, this.polygon);\n    };\n    Car.prototype.findRayIntersection = function (line) {\n        var _this = this;\n        var intersections = [];\n        for (var i = 0; i < this.polygon.length; i++) {\n            intersections.push((0, intersections_1.linesIntersect)(line[0], line[1], this.polygon[i], this.polygon[(i + 1) % this.polygon.length]));\n        }\n        var closestIntersection = undefined;\n        intersections.forEach(function (intersection) {\n            if (!closestIntersection)\n                closestIntersection = intersection;\n            if (intersection && closestIntersection) {\n                var isCloser = (0, distance_1.distance)(_this, intersection) < (0, distance_1.distance)(_this, closestIntersection);\n                if (isCloser)\n                    closestIntersection = intersection;\n            }\n        });\n        return closestIntersection;\n    };\n    Car.prototype.move = function () {\n        if (this.controls) {\n            var _a = this.controls, forward = _a.forward, reverse = _a.reverse, left = _a.left, right = _a.right;\n            if (forward)\n                this.speed += this.acceleration;\n            if (reverse)\n                this.speed -= this.acceleration;\n            if (this.speed > this.maxSpeed)\n                this.speed = this.maxSpeed;\n            if (this.speed < -this.maxSpeed)\n                this.speed = -this.maxSpeed;\n            if (this.speed != 0) {\n                var flip = this.speed > 0 ? -1 : 1;\n                if (left)\n                    this.angle += 0.03 * flip;\n                if (right)\n                    this.angle -= 0.03 * flip;\n            }\n        }\n        if (this.speed > 0)\n            this.speed -= this.break;\n        if (this.speed < 0)\n            this.speed += this.break;\n        this.x += Math.sin(this.angle) * this.speed;\n        this.y += Math.cos(this.angle) * this.speed;\n    };\n    Car.prototype.update = function (roads, traffic) {\n        if (this.roadSensor) {\n            this.roadSensor.update(roads, traffic);\n            if (this.controlType == \"self-driving\" /* CONTROLS.SELF_DRIVING */ ||\n                this.controlType == \"full-self-driving\" /* CONTROLS.FULL_SELF_DRIVING */) {\n                this.controls.useSelfDriving(this.roadSensor.readings);\n            }\n        }\n        if (this.laneSensor) {\n            this.laneSensor.update(roads);\n            this.controls.useLaneAssist(this.laneSensor.readings);\n        }\n        for (var _i = 0, roads_1 = roads; _i < roads_1.length; _i++) {\n            var road = roads_1[_i];\n            if (road.detectCollision(this))\n                this.collision = true;\n        }\n        for (var _a = 0, traffic_1 = traffic; _a < traffic_1.length; _a++) {\n            var trafficCar = traffic_1[_a];\n            if (this.detectCollision(trafficCar))\n                this.collision = true;\n        }\n        if (!this.collision) {\n            this.move();\n            this.distance += this.speed;\n            this.polygon = this.generateCar();\n        }\n    };\n    Car.prototype.updateTraffic = function (roads) {\n        if (this.laneSensor) {\n            this.laneSensor.update(roads);\n            this.controls.useLaneAssist(this.laneSensor.readings);\n        }\n        for (var _i = 0, roads_2 = roads; _i < roads_2.length; _i++) {\n            var road = roads_2[_i];\n            if (road.detectCollision(this))\n                this.collision = true;\n        }\n        if (!this.collision) {\n            this.move();\n            this.distance += Math.abs(this.speed);\n            this.polygon = this.generateCar();\n        }\n    };\n    Car.prototype.draw = function (context, color) {\n        var _this = this;\n        if (this.collision)\n            context.fillStyle = \"grey\";\n        else\n            context.fillStyle = color;\n        context.beginPath();\n        this.polygon.forEach(function (point, index) {\n            var _a = _this.plane.mapToCanvas(point), x = _a.x, y = _a.y;\n            if (index == 0)\n                context.moveTo(x, y);\n            else\n                context.lineTo(x, y);\n        });\n        context.fill();\n        if (this.roadSensor)\n            this.roadSensor.draw(context);\n        if (this.laneSensor && this.controlType !== \"dummy\" /* CONTROLS.DUMMY */) {\n            this.laneSensor.draw(context);\n        }\n    };\n    return Car;\n}());\nexports.Car = Car;\n\n\n//# sourceURL=webpack://self-driving/./src/classes/Car.ts?");

/***/ }),

/***/ "./src/classes/Controls.ts":
/*!*********************************!*\
  !*** ./src/classes/Controls.ts ***!
  \*********************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Controls = void 0;\nvar NeuralNetwork_1 = __webpack_require__(/*! ./Models/NeuralNetwork */ \"./src/classes/Models/NeuralNetwork.ts\");\nvar Controls = /** @class */ (function () {\n    function Controls(type, rays) {\n        this.forward = false;\n        this.left = false;\n        this.right = false;\n        this.reverse = false;\n        this.manualOverride = false;\n        this.brain = undefined;\n        switch (type) {\n            case \"dummy\" /* CONTROLS.DUMMY */:\n                this.forward = true;\n                break;\n            case \"lane-assist\" /* CONTROLS.LANE_ASSIST */:\n                this.manualControls();\n                break;\n            case \"self-driving\" /* CONTROLS.SELF_DRIVING */:\n                this.brain = new NeuralNetwork_1.NeuralNetwork([rays, 6, 4]);\n                break;\n            case \"full-self-driving\" /* CONTROLS.FULL_SELF_DRIVING */:\n                //this.forward = true;\n                this.brain = new NeuralNetwork_1.NeuralNetwork([rays, 6, 4]);\n                break;\n            default:\n                this.manualControls();\n                break;\n        }\n    }\n    Controls.prototype.manualControls = function () {\n        var _this = this;\n        document.onkeydown = function (event) {\n            switch (event.key) {\n                case \"ArrowUp\":\n                    _this.forward = true;\n                    break;\n                case \"ArrowLeft\":\n                    _this.manualOverride = true;\n                    _this.left = true;\n                    _this.right = false;\n                    break;\n                case \"ArrowRight\":\n                    _this.manualOverride = true;\n                    _this.right = true;\n                    _this.left = false;\n                    break;\n                case \"ArrowDown\":\n                    _this.reverse = true;\n                    break;\n            }\n        };\n        document.onkeyup = function (event) {\n            switch (event.key) {\n                case \"ArrowUp\":\n                    _this.forward = false;\n                    break;\n                case \"ArrowLeft\":\n                    _this.manualOverride = false;\n                    _this.left = false;\n                    break;\n                case \"ArrowRight\":\n                    _this.manualOverride = false;\n                    _this.right = false;\n                    break;\n                case \"ArrowDown\":\n                    _this.reverse = false;\n                    break;\n            }\n        };\n    };\n    Controls.prototype.useLaneAssist = function (readings) {\n        if (!this.manualOverride) {\n            if (readings[0] > readings[1]) {\n                this.left = true;\n                this.right = false;\n            }\n            if (readings[0] < readings[1]) {\n                this.left = false;\n                this.right = true;\n            }\n        }\n    };\n    Controls.prototype.useSelfDriving = function (readings) {\n        // const offsets = readings.map((reading) =>\n        //   reading == null ? 0 : 1 - reading\n        // );\n        var outputs = NeuralNetwork_1.NeuralNetwork.feedForward(readings, this.brain);\n        if (outputs[0] && !outputs[3]) {\n            this.forward = true;\n        }\n        else {\n            this.forward = false;\n        }\n        if (outputs[1] && !outputs[2]) {\n            this.manualOverride = true;\n            this.left = true;\n        }\n        else {\n            this.manualOverride = false;\n            this.left = false;\n        }\n        if (outputs[2] && !outputs[1]) {\n            this.manualOverride = true;\n            this.right = true;\n        }\n        else {\n            this.manualOverride = false;\n            this.right = false;\n        }\n        if (outputs[3] && !outputs[0]) {\n            this.reverse = true;\n        }\n        else {\n            this.reverse = false;\n        }\n        //this.forward = true;\n        //this.reverse = false;\n    };\n    return Controls;\n}());\nexports.Controls = Controls;\n\n\n//# sourceURL=webpack://self-driving/./src/classes/Controls.ts?");

/***/ }),

/***/ "./src/classes/CoordPlane.ts":
/*!***********************************!*\
  !*** ./src/classes/CoordPlane.ts ***!
  \***********************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/**\n * Class representing the coordinate plane for a canvas\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.CoordPlane = void 0;\nvar transformations_1 = __webpack_require__(/*! ../utils/transformations */ \"./src/utils/transformations.ts\");\nvar CoordPlane = /** @class */ (function () {\n    function CoordPlane(rotation, x, y) {\n        this.center = { x: 0, y: 0 };\n        this.rotation = rotation;\n        this.shiftX = x;\n        this.shiftY = y;\n    }\n    CoordPlane.prototype.updateCenter = function (car) {\n        var x = car.x;\n        var y = car.y;\n        this.center = { x: x, y: y };\n    };\n    CoordPlane.prototype.mapToCanvas = function (point) {\n        var rotatedPoint = (0, transformations_1.reflectOverX)(point);\n        return (0, transformations_1.shift)(rotatedPoint, this.shiftX - this.center.x, this.shiftY + this.center.y);\n    };\n    return CoordPlane;\n}());\nexports.CoordPlane = CoordPlane;\n\n\n//# sourceURL=webpack://self-driving/./src/classes/CoordPlane.ts?");

/***/ }),

/***/ "./src/classes/Models/NeuralNetwork.ts":
/*!*********************************************!*\
  !*** ./src/classes/Models/NeuralNetwork.ts ***!
  \*********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Layer = exports.NeuralNetwork = void 0;\nvar lerp_1 = __webpack_require__(/*! ../../utils/lerp */ \"./src/utils/lerp.ts\");\nvar NeuralNetwork = /** @class */ (function () {\n    function NeuralNetwork(neuronCounts) {\n        this.layers = [];\n        this.brainId = 0;\n        for (var i = 0; i < neuronCounts.length - 1; i++) {\n            this.layers.push(new Layer(neuronCounts[i], neuronCounts[i + 1]));\n        }\n    }\n    NeuralNetwork.feedForward = function (givenInputs, network) {\n        var outputs = Layer.feedForward(givenInputs, network.layers[0]);\n        for (var i = 1; i < network.layers.length; i++) {\n            outputs = Layer.feedForward(outputs, network.layers[i]);\n        }\n        return outputs;\n    };\n    NeuralNetwork.mutate = function (network, amount) {\n        if (amount === void 0) { amount = 1; }\n        network.layers.forEach(function (layer) {\n            for (var i = 0; i < layer.biases.length; i++) {\n                layer.biases[i] = (0, lerp_1.lerp)(layer.biases[i], Math.random() * 2 - 1, amount);\n            }\n            for (var i = 0; i < layer.weights.length; i++) {\n                for (var j = 0; j < layer.weights[i].length; j++) {\n                    layer.weights[i][j] = (0, lerp_1.lerp)(layer.weights[i][j], Math.random() * 2 - 1, amount);\n                }\n            }\n        });\n    };\n    return NeuralNetwork;\n}());\nexports.NeuralNetwork = NeuralNetwork;\nvar Layer = /** @class */ (function () {\n    function Layer(inputCount, outputCount) {\n        this.weights = [];\n        this.inputs = new Array(inputCount);\n        this.outputs = new Array(outputCount);\n        this.biases = new Array(outputCount);\n        for (var i = 0; i < inputCount; i++) {\n            this.weights.push(new Array(outputCount));\n        }\n        Layer.randomize(this);\n    }\n    Layer.randomize = function (layer) {\n        if (layer.weights.length) {\n            for (var i = 0; i < layer.inputs.length; i++) {\n                for (var j = 0; j < layer.outputs.length; j++) {\n                    layer.weights[i][j] = Math.random() * 2 - 1;\n                }\n            }\n            for (var i = 0; i < layer.biases.length; i++) {\n                layer.biases[i] = Math.random() * 2 - 1;\n            }\n        }\n    };\n    Layer.feedForward = function (givenInputs, layer) {\n        for (var i = 0; i < layer.inputs.length; i++) {\n            layer.inputs[i] = givenInputs[i];\n        }\n        for (var i = 0; i < layer.outputs.length; i++) {\n            var sum = 0;\n            for (var j = 0; j < layer.inputs.length; j++) {\n                sum += layer.inputs[j] * layer.weights[j][i];\n            }\n            if (sum > layer.biases[i]) {\n                layer.outputs[i] = 1;\n            }\n            else {\n                layer.outputs[i] = 0;\n            }\n        }\n        return layer.outputs;\n    };\n    return Layer;\n}());\nexports.Layer = Layer;\n\n\n//# sourceURL=webpack://self-driving/./src/classes/Models/NeuralNetwork.ts?");

/***/ }),

/***/ "./src/classes/Road/StraightRoad.ts":
/*!******************************************!*\
  !*** ./src/classes/Road/StraightRoad.ts ***!
  \******************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.StraightRoad = void 0;\nvar intersections_1 = __webpack_require__(/*! ../../utils/intersections */ \"./src/utils/intersections.ts\");\nvar lerp_1 = __webpack_require__(/*! ../../utils/lerp */ \"./src/utils/lerp.ts\");\nvar reductions_1 = __webpack_require__(/*! ../../utils/reductions */ \"./src/utils/reductions.ts\");\nvar transformations_1 = __webpack_require__(/*! ../../utils/transformations */ \"./src/utils/transformations.ts\");\nvar StraightRoad = /** @class */ (function () {\n    function StraightRoad(plane, offset, width, laneCount) {\n        var x = offset.x, y = offset.y, rotation = offset.rotation;\n        this.plane = plane;\n        this.start = { x: x, y: y };\n        this.width = width;\n        this.laneCount = laneCount;\n        this.rotation = rotation;\n        this.lanes = this.generateLanes();\n        this.borders = this.generateBorders();\n        var _a = this.getBounds(), xMin = _a.xMin, xMax = _a.xMax, yMin = _a.yMin, yMax = _a.yMax;\n        this.xMin = xMin;\n        this.xMax = xMax;\n        this.yMin = yMin;\n        this.yMax = yMax;\n    }\n    Object.defineProperty(StraightRoad.prototype, \"offset\", {\n        get: function () {\n            var angle = this.rotation / Math.PI;\n            var xOffset = 0;\n            var yOffset = 0;\n            if (angle % 1 == 0) {\n                if (angle % 2 == 0) {\n                    yOffset = this.width;\n                }\n                else {\n                    yOffset = -this.width;\n                }\n            }\n            else {\n                if ((angle - 0.5) % 2 == 0) {\n                    xOffset = this.width;\n                }\n                else {\n                    xOffset = -this.width;\n                }\n            }\n            var shiftedCenter = (0, transformations_1.shift)(this.start, xOffset, yOffset);\n            return __assign(__assign({}, shiftedCenter), { rotation: this.rotation });\n        },\n        enumerable: false,\n        configurable: true\n    });\n    StraightRoad.prototype.getLaneCenter = function (lane) {\n        var laneWidth = this.width / this.laneCount;\n        var left = this.start.x - this.width / 2;\n        var laneX = left + laneWidth / 2 + Math.min(lane - 1, this.laneCount - 1) * laneWidth;\n        var laneY = this.start.y;\n        var _a = (0, transformations_1.rotateClockwiseAround)(this.start, { x: laneX, y: laneY }, this.rotation), x = _a.x, y = _a.y;\n        return {\n            x: x,\n            y: y,\n            rotation: this.rotation,\n        };\n    };\n    StraightRoad.prototype.generateBorders = function () {\n        var _this = this;\n        var shiftRoad = this.width / 2;\n        var left = [\n            (0, transformations_1.shift)(this.start, -shiftRoad, -shiftRoad),\n            (0, transformations_1.shift)(this.start, -shiftRoad, shiftRoad),\n        ];\n        var right = [\n            (0, transformations_1.shift)(this.start, shiftRoad, -shiftRoad),\n            (0, transformations_1.shift)(this.start, shiftRoad, shiftRoad),\n        ];\n        return [left, right].map(function (border) {\n            return border.map(function (point) {\n                return (0, transformations_1.rotateClockwiseAround)(_this.start, point, _this.rotation);\n            });\n        });\n    };\n    StraightRoad.prototype.generateLanes = function () {\n        var _this = this;\n        var shiftRoad = this.width / 2;\n        var _a = this.start, x = _a.x, y = _a.y;\n        var left = x - shiftRoad;\n        var right = x + shiftRoad;\n        var top = y + shiftRoad;\n        var bottom = y - shiftRoad;\n        var lanes = [];\n        for (var i = 1; i < this.laneCount; i++) {\n            var laneX = (0, lerp_1.lerp)(left, right, i / this.laneCount);\n            var laneBottom = { x: laneX, y: bottom };\n            var laneTop = { x: laneX, y: top };\n            lanes.push([laneBottom, laneTop]);\n        }\n        return lanes.map(function (lane) {\n            return lane.map(function (point) {\n                return (0, transformations_1.rotateClockwiseAround)(_this.start, point, _this.rotation);\n            });\n        });\n    };\n    StraightRoad.prototype.getBounds = function () {\n        var bounds = this.borders.flat();\n        var xVals = bounds.map(function (_a) {\n            var x = _a.x;\n            return x;\n        });\n        var yVals = bounds.map(function (_a) {\n            var y = _a.y;\n            return y;\n        });\n        var xMin = xVals.reduce(reductions_1.minReduction, xVals[0]);\n        var xMax = xVals.reduce(reductions_1.maxReduction, xVals[0]);\n        var yMin = yVals.reduce(reductions_1.minReduction, yVals[0]);\n        var yMax = yVals.reduce(reductions_1.maxReduction, yVals[0]);\n        return { xMin: xMin, xMax: xMax, yMin: yMin, yMax: yMax };\n    };\n    StraightRoad.prototype.containsCar = function (car) {\n        var _this = this;\n        return car.polygon.some(function (corner) { return _this.containsPoint(corner); });\n    };\n    StraightRoad.prototype.containsPoint = function (_a) {\n        var x = _a.x, y = _a.y;\n        var xInBounds = x > this.xMin && x < this.xMax;\n        var yInBounds = y > this.yMin && y < this.yMax;\n        if (xInBounds && yInBounds)\n            return true;\n        return false;\n    };\n    StraightRoad.prototype.detectCollision = function (car) {\n        for (var _i = 0, _a = this.borders; _i < _a.length; _i++) {\n            var border = _a[_i];\n            if ((0, intersections_1.polygonsIntersect)(car.polygon, border))\n                return true;\n        }\n        return false;\n    };\n    StraightRoad.prototype.findBorderIntersection = function (line) {\n        var intersections = this.borders.map(function (border) {\n            return (0, intersections_1.linesIntersect)(line[0], line[1], border[0], border[1]);\n        });\n        return intersections.find(function (intersection) { return intersection; });\n    };\n    StraightRoad.prototype.findLaneIntersection = function (line) {\n        var intersections = __spreadArray(__spreadArray([], this.lanes, true), this.borders, true).map(function (border) {\n            return (0, intersections_1.linesIntersect)(line[0], line[1], border[0], border[1]);\n        });\n        return intersections.find(function (intersection) { return intersection; });\n    };\n    StraightRoad.prototype.draw = function (context) {\n        var _this = this;\n        context.lineWidth = 5;\n        context.strokeStyle = \"white\";\n        context.setLineDash([this.width / 4, this.width / 4]);\n        for (var _i = 0, _a = this.lanes; _i < _a.length; _i++) {\n            var lane = _a[_i];\n            var points = lane.map(function (point) { return _this.plane.mapToCanvas(point); });\n            context.beginPath();\n            context.moveTo(points[0].x, points[0].y);\n            context.lineTo(points[1].x, points[1].y);\n            context.stroke();\n        }\n        context.setLineDash([]);\n        for (var _b = 0, _c = this.borders; _b < _c.length; _b++) {\n            var border = _c[_b];\n            var points = border.map(function (point) { return _this.plane.mapToCanvas(point); });\n            context.beginPath();\n            context.moveTo(points[0].x, points[0].y);\n            context.lineTo(points[1].x, points[1].y);\n            context.stroke();\n        }\n    };\n    return StraightRoad;\n}());\nexports.StraightRoad = StraightRoad;\n\n\n//# sourceURL=webpack://self-driving/./src/classes/Road/StraightRoad.ts?");

/***/ }),

/***/ "./src/classes/Road/TurnRoad.ts":
/*!**************************************!*\
  !*** ./src/classes/Road/TurnRoad.ts ***!
  \**************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.TurnRoad = void 0;\nvar distance_1 = __webpack_require__(/*! ../../utils/distance */ \"./src/utils/distance.ts\");\nvar intersections_1 = __webpack_require__(/*! ../../utils/intersections */ \"./src/utils/intersections.ts\");\nvar lerp_1 = __webpack_require__(/*! ../../utils/lerp */ \"./src/utils/lerp.ts\");\nvar transformations_1 = __webpack_require__(/*! ../../utils/transformations */ \"./src/utils/transformations.ts\");\nvar TurnRoad = /** @class */ (function () {\n    function TurnRoad(plane, offset, width, laneCount, direction) {\n        var x = offset.x, y = offset.y, rotation = offset.rotation;\n        this.plane = plane;\n        this.start = { x: x, y: y };\n        this.width = width;\n        this.laneCount = laneCount;\n        this.rotation = rotation;\n        this.isCW = direction == \"CW\";\n        this.origin = this.calculateOrigin();\n        this.laneRadii = this.generateLaneRadii();\n        this.borderRadii = [width, width * 2];\n        this.rotationStart = this.isCW ? this.rotation - Math.PI : this.rotation;\n        this.rotationEnd = this.rotation - Math.PI / 2;\n    }\n    Object.defineProperty(TurnRoad.prototype, \"offset\", {\n        get: function () {\n            var angle = this.rotation / Math.PI;\n            var xOffset = this.width;\n            var yOffset = this.width;\n            if (angle % 1 == 0) {\n                if (angle % 2 == 0) {\n                    xOffset *= this.isCW ? 2 : -2;\n                }\n                else {\n                    xOffset *= this.isCW ? -2 : 2;\n                    yOffset *= -1;\n                }\n            }\n            else {\n                if ((angle - 0.5) % 2 == 0) {\n                    yOffset *= this.isCW ? -2 : 2;\n                }\n                else {\n                    yOffset *= this.isCW ? 2 : -2;\n                    xOffset *= -1;\n                }\n            }\n            var offsetOrigin = (0, transformations_1.shift)(this.start, xOffset, yOffset);\n            var rotationDirection = this.isCW ? Math.PI / 2 : -Math.PI / 2;\n            return __assign(__assign({}, offsetOrigin), { rotation: (this.rotation + rotationDirection) % (2 * Math.PI) });\n        },\n        enumerable: false,\n        configurable: true\n    });\n    TurnRoad.prototype.generateLaneRadii = function () {\n        var start = this.width;\n        var end = this.width * 2;\n        var laneRadii = [];\n        for (var i = 1; i < this.laneCount; i++) {\n            var laneX = (0, lerp_1.lerp)(start, end, i / this.laneCount);\n            laneRadii.push(laneX);\n        }\n        return laneRadii;\n    };\n    TurnRoad.prototype.calculateOrigin = function () {\n        var angle = this.rotation / Math.PI;\n        var flip = this.isCW ? 1 : -1;\n        var halfWidth = this.width / 2;\n        var shiftX = 0;\n        var shiftY = 0;\n        if (angle % 1 == 0) {\n            if (angle % 2 == 0) {\n                shiftX = 3 * halfWidth * flip;\n                shiftY = -halfWidth;\n            }\n            else {\n                shiftX = 3 * halfWidth * -flip;\n                shiftY = halfWidth;\n            }\n        }\n        else {\n            if ((angle - 0.5) % 2 == 0) {\n                shiftX = -halfWidth;\n                shiftY = 3 * halfWidth * -flip;\n            }\n            else {\n                shiftX = halfWidth;\n                shiftY = 3 * halfWidth * flip;\n            }\n        }\n        return (0, transformations_1.shift)(this.start, shiftX, shiftY);\n    };\n    TurnRoad.prototype.containsCar = function (car) {\n        var _this = this;\n        return car.polygon.some(function (corner) { return _this.containsPoint(corner); });\n    };\n    TurnRoad.prototype.containsPoint = function (point) {\n        var position = (0, distance_1.distance)(point, this.origin);\n        var validDistance = position >= this.width && position <= this.width * 2;\n        if (!validDistance)\n            return false;\n        var dx = point.x - this.origin.x;\n        var dy = point.y - this.origin.y;\n        var angle = Math.atan2(-dy, dx);\n        if (angle < 0)\n            angle += 2 * Math.PI;\n        var keep2PI = this.isCW\n            ? this.rotation == Math.PI / 2\n            : this.rotation == 0;\n        var startAngle = (0, transformations_1.makePositiveRad)(this.rotationStart, keep2PI);\n        var endAngle = (0, transformations_1.makePositiveRad)(this.rotationEnd, keep2PI);\n        if (this.isCW)\n            return angle >= startAngle && angle <= endAngle;\n        else\n            return angle <= startAngle && angle >= endAngle;\n    };\n    TurnRoad.prototype.detectCollision = function (car) {\n        for (var i = 0; i < car.polygon.length; i++) {\n            var line = [car.polygon[i], car.polygon[(i + 1) % car.polygon.length]];\n            var doesIntersect = this.findBorderIntersection(line);\n            if (doesIntersect)\n                return true;\n        }\n        return false;\n    };\n    TurnRoad.prototype.findBorderIntersection = function (line) {\n        var _this = this;\n        var borderIntersections = this.borderRadii\n            .map(function (radius) { return (0, intersections_1.findCircleLineIntersections)(_this.origin, radius, line); })\n            .flat();\n        return borderIntersections.find(function (intersection) {\n            if ((0, intersections_1.pointOnSegment)(intersection, line))\n                return intersection;\n        });\n    };\n    TurnRoad.prototype.findLaneIntersection = function (line) {\n        var _this = this;\n        var laneIntersections = __spreadArray(__spreadArray([], this.laneRadii, true), this.borderRadii, true).map(function (radius) { return (0, intersections_1.findCircleLineIntersections)(_this.origin, radius, line); })\n            .flat();\n        return laneIntersections.find(function (intersection) {\n            if ((0, intersections_1.pointOnSegment)(intersection, line))\n                return intersection;\n        });\n    };\n    TurnRoad.prototype.draw = function (context) {\n        context.lineWidth = 5;\n        context.strokeStyle = \"white\";\n        context.setLineDash([this.width / 4, this.width / 4]);\n        for (var _i = 0, _a = this.laneRadii; _i < _a.length; _i++) {\n            var laneRadius = _a[_i];\n            var _b = this.plane.mapToCanvas(this.origin), x = _b.x, y = _b.y;\n            context.beginPath();\n            context.arc(x, y, laneRadius, this.rotationStart, this.rotationEnd, !this.isCW);\n            context.stroke();\n        }\n        context.setLineDash([]);\n        for (var _c = 0, _d = this.borderRadii; _c < _d.length; _c++) {\n            var borderRadius = _d[_c];\n            var _e = this.plane.mapToCanvas(this.origin), x = _e.x, y = _e.y;\n            context.beginPath();\n            context.arc(x, y, borderRadius, this.rotationStart, this.rotationEnd, !this.isCW);\n            context.stroke();\n        }\n    };\n    return TurnRoad;\n}());\nexports.TurnRoad = TurnRoad;\n\n\n//# sourceURL=webpack://self-driving/./src/classes/Road/TurnRoad.ts?");

/***/ }),

/***/ "./src/classes/Sensors/LaneSensor.ts":
/*!*******************************************!*\
  !*** ./src/classes/Sensors/LaneSensor.ts ***!
  \*******************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.LaneSensor = void 0;\nvar distance_1 = __webpack_require__(/*! ../../utils/distance */ \"./src/utils/distance.ts\");\nvar lerp_1 = __webpack_require__(/*! ../../utils/lerp */ \"./src/utils/lerp.ts\");\nvar LaneSensor = /** @class */ (function () {\n    function LaneSensor(car, plane) {\n        this.rayCount = 2;\n        this.rayLength = 150;\n        this.raySpread = Math.PI / 1.5;\n        this.rays = [];\n        this.intersections = [];\n        this.car = car;\n        this.plane = plane;\n    }\n    LaneSensor.prototype.update = function (roads) {\n        var _this = this;\n        this.castRays();\n        var borderIntersections = roads.map(function (road) {\n            return _this.rays.map(function (ray) { return road.findLaneIntersection(ray); });\n        });\n        var intersectionLenghts = borderIntersections.map(function (intersections) { return intersections.length; });\n        var i = 0;\n        var intersections = [];\n        while (intersectionLenghts.some(function (length) { return i < length; })) {\n            var validIntersection = borderIntersections.find(function (intersections) { return intersections[i]; });\n            if (validIntersection)\n                intersections.push(validIntersection[i]);\n            else\n                intersections.push(undefined);\n            i++;\n        }\n        this.intersections = intersections;\n    };\n    LaneSensor.prototype.castRays = function () {\n        this.rays = [];\n        var spread = this.raySpread / 2;\n        for (var i = 0; i < this.rayCount; i++) {\n            var spacing = this.rayCount == 1 ? 0.5 : i / (this.rayCount - 1);\n            var rayAngle = (0, lerp_1.lerp)(spread, -spread, spacing) + this.car.angle;\n            var start = { x: this.car.x, y: this.car.y };\n            var end = {\n                x: this.car.x + Math.sin(rayAngle) * this.rayLength,\n                y: this.car.y + Math.cos(rayAngle) * this.rayLength,\n            };\n            this.rays.push([start, end]);\n        }\n    };\n    Object.defineProperty(LaneSensor.prototype, \"readings\", {\n        get: function () {\n            var values = [];\n            for (var i = 0; i < this.rayCount; i++) {\n                var middle = this.plane.mapToCanvas(this.rays[i][1]);\n                if (this.intersections[i]) {\n                    middle = this.plane.mapToCanvas(this.intersections[i]);\n                }\n                var end = this.plane.mapToCanvas(this.rays[i][1]);\n                values.push((0, distance_1.distance)(end, middle) / this.rayLength);\n            }\n            return values;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    LaneSensor.prototype.draw = function (context) {\n        for (var i = 0; i < this.rayCount; i++) {\n            var middle = this.plane.mapToCanvas(this.rays[i][1]);\n            if (this.intersections[i]) {\n                middle = this.plane.mapToCanvas(this.intersections[i]);\n            }\n            var start = this.plane.mapToCanvas(this.rays[i][0]);\n            var end = this.plane.mapToCanvas(this.rays[i][1]);\n            context.beginPath();\n            context.lineWidth = 2;\n            context.strokeStyle = \"orange\";\n            context.moveTo(start.x, start.y);\n            context.lineTo(middle.x, middle.y);\n            context.stroke();\n            context.beginPath();\n            context.lineWidth = 2;\n            context.strokeStyle = \"black\";\n            context.moveTo(middle.x, middle.y);\n            context.lineTo(end.x, end.y);\n            context.stroke();\n        }\n    };\n    return LaneSensor;\n}());\nexports.LaneSensor = LaneSensor;\n\n\n//# sourceURL=webpack://self-driving/./src/classes/Sensors/LaneSensor.ts?");

/***/ }),

/***/ "./src/classes/Sensors/RoadSensor.ts":
/*!*******************************************!*\
  !*** ./src/classes/Sensors/RoadSensor.ts ***!
  \*******************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.RoadSensor = void 0;\nvar distance_1 = __webpack_require__(/*! ../../utils/distance */ \"./src/utils/distance.ts\");\nvar lerp_1 = __webpack_require__(/*! ../../utils/lerp */ \"./src/utils/lerp.ts\");\nvar RoadSensor = /** @class */ (function () {\n    function RoadSensor(car, plane) {\n        this.rayCount = 5;\n        this.rayLength = 150;\n        this.raySpread = Math.PI / 2;\n        this.rays = [];\n        this.intersections = [];\n        this.car = car;\n        this.plane = plane;\n    }\n    RoadSensor.prototype.update = function (roads, traffic) {\n        var _this = this;\n        this.castRays();\n        var borderIntersections = roads.map(function (road) {\n            return _this.rays.map(function (ray) { return road.findBorderIntersection(ray); });\n        });\n        var trafficIntersections = traffic.map(function (car) {\n            return _this.rays.map(function (ray) { return car.findRayIntersection(ray); });\n        });\n        var totalIntersections = __spreadArray(__spreadArray([], borderIntersections, true), trafficIntersections, true);\n        var intersectionLengths = totalIntersections.map(function (intersections) { return intersections.length; });\n        var i = 0;\n        var intersections = [];\n        var _loop_1 = function () {\n            var intersectionsForRay = totalIntersections.map(function (intersections) { return intersections[i]; });\n            var closestIntersection = undefined;\n            intersectionsForRay.forEach(function (intersection) {\n                if (!closestIntersection)\n                    closestIntersection = intersection;\n                if (intersection && closestIntersection) {\n                    var isCloser = (0, distance_1.distance)(_this.car, intersection) <\n                        (0, distance_1.distance)(_this.car, closestIntersection);\n                    if (isCloser)\n                        closestIntersection = intersection;\n                }\n            });\n            intersections.push(closestIntersection);\n            i++;\n        };\n        while (intersectionLengths.some(function (length) { return i < length; })) {\n            _loop_1();\n        }\n        this.intersections = intersections;\n    };\n    RoadSensor.prototype.castRays = function () {\n        this.rays = [];\n        var spread = this.raySpread / 2;\n        for (var i = 0; i < this.rayCount; i++) {\n            var spacing = this.rayCount == 1 ? 0.5 : i / (this.rayCount - 1);\n            var rayAngle = (0, lerp_1.lerp)(spread, -spread, spacing) + this.car.angle;\n            var start = { x: this.car.x, y: this.car.y };\n            var end = {\n                x: this.car.x + Math.sin(rayAngle) * this.rayLength,\n                y: this.car.y + Math.cos(rayAngle) * this.rayLength,\n            };\n            this.rays.push([start, end]);\n        }\n    };\n    Object.defineProperty(RoadSensor.prototype, \"readings\", {\n        get: function () {\n            var values = [];\n            for (var i = 0; i < this.rayCount; i++) {\n                var middle = this.plane.mapToCanvas(this.rays[i][1]);\n                if (this.intersections[i]) {\n                    middle = this.plane.mapToCanvas(this.intersections[i]);\n                }\n                var end = this.plane.mapToCanvas(this.rays[i][1]);\n                values.push((0, distance_1.distance)(end, middle) / this.rayLength);\n            }\n            return values;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    RoadSensor.prototype.draw = function (context) {\n        for (var i = 0; i < this.rayCount; i++) {\n            var middle = this.plane.mapToCanvas(this.rays[i][1]);\n            if (this.intersections[i]) {\n                middle = this.plane.mapToCanvas(this.intersections[i]);\n            }\n            var start = this.plane.mapToCanvas(this.rays[i][0]);\n            var end = this.plane.mapToCanvas(this.rays[i][1]);\n            context.beginPath();\n            context.lineWidth = 2;\n            context.strokeStyle = \"yellow\";\n            context.moveTo(start.x, start.y);\n            context.lineTo(middle.x, middle.y);\n            context.stroke();\n            context.beginPath();\n            context.lineWidth = 2;\n            context.strokeStyle = \"black\";\n            context.moveTo(middle.x, middle.y);\n            context.lineTo(end.x, end.y);\n            context.stroke();\n        }\n    };\n    return RoadSensor;\n}());\nexports.RoadSensor = RoadSensor;\n\n\n//# sourceURL=webpack://self-driving/./src/classes/Sensors/RoadSensor.ts?");

/***/ }),

/***/ "./src/classes/Simulation/Controller.ts":
/*!**********************************************!*\
  !*** ./src/classes/Simulation/Controller.ts ***!
  \**********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.SimulationController = void 0;\nvar tracks_1 = __webpack_require__(/*! ../../tracks */ \"./src/tracks/index.ts\");\nvar ManualSimulation_1 = __webpack_require__(/*! ./ManualSimulation */ \"./src/classes/Simulation/ManualSimulation.ts\");\nvar SelfDrivingSimulation_1 = __webpack_require__(/*! ./SelfDrivingSimulation */ \"./src/classes/Simulation/SelfDrivingSimulation.ts\");\nvar SimulationController = /** @class */ (function () {\n    function SimulationController() {\n        this.mode = \"manual\" /* CONTROLS.MANUAL */;\n        this.track = tracks_1.TRACKS.MARIO_CIRCUIT_1;\n        this.numCars = 10;\n        this.modeButtons = document.getElementsByClassName(\"setting-button\");\n        this.trackButtons = document.getElementsByClassName(\"track-button\");\n        var defaultTrack = (0, tracks_1.getTrack)(this.track);\n        this.simulation = new ManualSimulation_1.ManualSimulation(this.mode, defaultTrack);\n        this.addListeners();\n    }\n    SimulationController.prototype.addListeners = function () {\n        var _this = this;\n        document.getElementById(\"select-manual\").onclick = function () {\n            _this.mode = \"manual\" /* CONTROLS.MANUAL */;\n            _this.updateMode();\n        };\n        document.getElementById(\"select-lane-assist\").onclick = function () {\n            _this.mode = \"lane-assist\" /* CONTROLS.LANE_ASSIST */;\n            _this.updateMode();\n        };\n        document.getElementById(\"select-self-driving\").onclick = function () {\n            _this.mode = \"self-driving\" /* CONTROLS.SELF_DRIVING */;\n            _this.updateMode();\n        };\n        document.getElementById(\"select-full-self-driving\").onclick = function () {\n            _this.mode = \"full-self-driving\" /* CONTROLS.FULL_SELF_DRIVING */;\n            _this.updateMode();\n        };\n        document.getElementById(\"select-donut\").onclick = function () {\n            _this.track = tracks_1.TRACKS.DONUT;\n            _this.updateTrack();\n        };\n        document.getElementById(\"select-nascar\").onclick = function () {\n            _this.track = tracks_1.TRACKS.NASCAR;\n            _this.updateTrack();\n        };\n        document.getElementById(\"select-mario-circuit-1\").onclick = function () {\n            _this.track = tracks_1.TRACKS.MARIO_CIRCUIT_1;\n            _this.updateTrack();\n        };\n        document.getElementById(\"update-training-size\").onclick = function () {\n            var sizeInput = document.getElementById(\"training-size-input\");\n            _this.numCars = parseInt(sizeInput.value);\n            _this.updateMode();\n        };\n    };\n    SimulationController.prototype.start = function () {\n        this.simulation.simulate();\n    };\n    SimulationController.prototype.updateMode = function () {\n        this.setSimulation();\n        this.clearModeSelection();\n        this.setButtonActive(this.mode);\n        this.start();\n    };\n    SimulationController.prototype.updateTrack = function () {\n        this.setSimulation();\n        this.clearTrackSelection();\n        this.setButtonActive(this.track);\n        this.start();\n    };\n    SimulationController.prototype.setSimulation = function () {\n        var track = (0, tracks_1.getTrack)(this.track);\n        var container = document.getElementById(\"simulation-container\");\n        if (this.mode == \"manual\" /* CONTROLS.MANUAL */ || this.mode == \"lane-assist\" /* CONTROLS.LANE_ASSIST */) {\n            if (container)\n                container.dataset.mode = \"manual\";\n            this.simulation = new ManualSimulation_1.ManualSimulation(this.mode, track);\n        }\n        else {\n            if (container)\n                container.dataset.mode = \"self-driving\";\n            this.simulation = new SelfDrivingSimulation_1.SelfDrivingSimulation(this.mode, this.numCars, track);\n        }\n    };\n    SimulationController.prototype.clearModeSelection = function () {\n        var _a;\n        for (var i = 0; i < this.modeButtons.length; i++) {\n            (_a = this.modeButtons[i]) === null || _a === void 0 ? void 0 : _a.classList.remove(\"active\");\n        }\n    };\n    SimulationController.prototype.clearTrackSelection = function () {\n        var _a;\n        for (var i = 0; i < this.modeButtons.length; i++) {\n            (_a = this.trackButtons[i]) === null || _a === void 0 ? void 0 : _a.classList.remove(\"active\");\n        }\n    };\n    SimulationController.prototype.setButtonActive = function (button) {\n        var _a;\n        (_a = document.getElementById(\"select-\".concat(button))) === null || _a === void 0 ? void 0 : _a.classList.add(\"active\");\n    };\n    SimulationController.prototype.resetSimulation = function () {\n        this.simulation.reset();\n    };\n    return SimulationController;\n}());\nexports.SimulationController = SimulationController;\n\n\n//# sourceURL=webpack://self-driving/./src/classes/Simulation/Controller.ts?");

/***/ }),

/***/ "./src/classes/Simulation/ManualSimulation.ts":
/*!****************************************************!*\
  !*** ./src/classes/Simulation/ManualSimulation.ts ***!
  \****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ManualSimulation = void 0;\nvar distance_1 = __webpack_require__(/*! ../../utils/distance */ \"./src/utils/distance.ts\");\nvar Car_1 = __webpack_require__(/*! ../Car */ \"./src/classes/Car.ts\");\nvar CoordPlane_1 = __webpack_require__(/*! ../CoordPlane */ \"./src/classes/CoordPlane.ts\");\nvar ManualSimulation = /** @class */ (function () {\n    function ManualSimulation(mode, track) {\n        var _this = this;\n        this.carCanvas = document.getElementById(\"carCanvas\");\n        this.carContext = this.carCanvas.getContext(\"2d\");\n        this.track = [];\n        this.traffic = [];\n        this.simulate = this.simulate.bind(this);\n        this.mode = mode;\n        this.plane = new CoordPlane_1.CoordPlane(Math.PI / 2, this.carCanvas.offsetWidth / 2, this.carCanvas.offsetHeight / 2);\n        this.car = new Car_1.Car(this.plane, 0, 0, 5, 0, 0, this.mode);\n        this.track = track.create(this.plane, 300, 3);\n        window.onresize = function () {\n            _this.plane.shiftX = _this.carCanvas.offsetWidth / 2;\n            _this.plane.shiftY = _this.carCanvas.offsetHeight / 2;\n        };\n    }\n    ManualSimulation.prototype.simulate = function () {\n        var _this = this;\n        this.carContext.canvas.width = this.carCanvas.offsetWidth;\n        this.carContext.canvas.height = this.carCanvas.offsetHeight;\n        for (var _i = 0, _a = this.track; _i < _a.length; _i++) {\n            var road = _a[_i];\n            road.draw(this.carContext);\n        }\n        if (this.traffic.length) {\n            var _loop_1 = function (trafficCar) {\n                var sensorRoads = this_1.track.filter(function (road) {\n                    return trafficCar\n                        .laneSensor.rays.flat()\n                        .some(function (point) { return road.containsPoint(point); });\n                });\n                trafficCar.updateTraffic(sensorRoads);\n                trafficCar.draw(this_1.carContext, \"blue\");\n            };\n            var this_1 = this;\n            for (var _b = 0, _c = this.traffic; _b < _c.length; _b++) {\n                var trafficCar = _c[_b];\n                _loop_1(trafficCar);\n            }\n        }\n        this.plane.updateCenter(this.car);\n        var currentRoads = this.track.filter(function (road) {\n            var containsSensor = _this.mode == \"lane-assist\" /* CONTROLS.LANE_ASSIST */ &&\n                _this.car\n                    .laneSensor.rays.flat()\n                    .some(function (point) { return road.containsPoint(point); });\n            var containsCar = road.containsCar(_this.car);\n            return containsSensor || containsCar;\n        });\n        var nearestTraffic = this.traffic.filter(function (dummyCar) { return (0, distance_1.distance)(dummyCar, _this.car) < 150; });\n        this.car.update(currentRoads, nearestTraffic);\n        this.car.draw(this.carContext, \"red\");\n        requestAnimationFrame(this.simulate);\n    };\n    ManualSimulation.prototype.reset = function () {\n        this.car = new Car_1.Car(this.plane, 0, 0, 5, 0, 0, this.mode);\n    };\n    return ManualSimulation;\n}());\nexports.ManualSimulation = ManualSimulation;\n\n\n//# sourceURL=webpack://self-driving/./src/classes/Simulation/ManualSimulation.ts?");

/***/ }),

/***/ "./src/classes/Simulation/SelfDrivingSimulation.ts":
/*!*********************************************************!*\
  !*** ./src/classes/Simulation/SelfDrivingSimulation.ts ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.SelfDrivingSimulation = void 0;\nvar distance_1 = __webpack_require__(/*! ../../utils/distance */ \"./src/utils/distance.ts\");\nvar random_1 = __webpack_require__(/*! ../../utils/random */ \"./src/utils/random.ts\");\nvar Car_1 = __webpack_require__(/*! ../Car */ \"./src/classes/Car.ts\");\nvar CoordPlane_1 = __webpack_require__(/*! ../CoordPlane */ \"./src/classes/CoordPlane.ts\");\nvar NeuralNetwork_1 = __webpack_require__(/*! ../Models/NeuralNetwork */ \"./src/classes/Models/NeuralNetwork.ts\");\nvar StraightRoad_1 = __webpack_require__(/*! ../Road/StraightRoad */ \"./src/classes/Road/StraightRoad.ts\");\nvar Visualizer_1 = __webpack_require__(/*! ../Visualizer */ \"./src/classes/Visualizer.ts\");\nvar SelfDrivingSimulation = /** @class */ (function () {\n    function SelfDrivingSimulation(mode, numCars, track) {\n        var _this = this;\n        this.carCanvas = document.getElementById(\"carCanvas\");\n        this.carContext = this.carCanvas.getContext(\"2d\");\n        this.networkCanvas = document.getElementById(\"networkCanvas\");\n        this.networkContext = this.networkCanvas.getContext(\"2d\");\n        this.specimens = 0;\n        this.generation = 0;\n        this.track = [];\n        this.traffic = [];\n        this.simulate = this.simulate.bind(this);\n        this.mode = mode;\n        this.plane = new CoordPlane_1.CoordPlane(Math.PI / 2, this.carCanvas.offsetWidth / 2, this.carCanvas.offsetHeight / 2);\n        this.numCars = numCars;\n        this.cars = this.generateCars(numCars);\n        this.bestCar = this.cars[0];\n        this.track = track.create(this.plane, 300, 3);\n        this.traffic = this.generateTraffic(this.track);\n        window.onresize = function () {\n            _this.plane.shiftX = _this.carCanvas.offsetWidth / 2;\n            _this.plane.shiftY = _this.carCanvas.offsetHeight / 2;\n        };\n    }\n    SelfDrivingSimulation.prototype.simulate = function () {\n        this.carContext.canvas.width = this.carCanvas.offsetWidth;\n        this.carContext.canvas.height = this.carCanvas.offsetHeight;\n        this.networkContext.canvas.width = this.carCanvas.offsetWidth;\n        this.networkContext.canvas.height = this.carCanvas.offsetHeight;\n        for (var _i = 0, _a = this.track; _i < _a.length; _i++) {\n            var road = _a[_i];\n            road.draw(this.carContext);\n        }\n        var _loop_1 = function (trafficCar) {\n            var sensorRoads = this_1.track.filter(function (road) {\n                return trafficCar\n                    .laneSensor.rays.flat()\n                    .some(function (point) { return road.containsPoint(point); });\n            });\n            trafficCar.updateTraffic(sensorRoads);\n            trafficCar.draw(this_1.carContext, \"blue\");\n        };\n        var this_1 = this;\n        for (var _b = 0, _c = this.traffic; _b < _c.length; _b++) {\n            var trafficCar = _c[_b];\n            _loop_1(trafficCar);\n        }\n        this.carContext.globalAlpha = 0.2;\n        var _loop_2 = function (currentCar) {\n            var currentRoads = this_2.track.filter(function (road) {\n                return road.containsCar(currentCar);\n            });\n            var nearestTraffic = this_2.traffic.filter(function (dummyCar) { return (0, distance_1.distance)(dummyCar, currentCar) < 150; });\n            currentCar.update(currentRoads, nearestTraffic);\n            currentCar.draw(this_2.carContext, \"red\");\n        };\n        var this_2 = this;\n        for (var _d = 0, _e = this.cars; _d < _e.length; _d++) {\n            var currentCar = _e[_d];\n            _loop_2(currentCar);\n        }\n        var car = this.getBestCar(true);\n        this.plane.updateCenter(car);\n        this.carContext.globalAlpha = 1;\n        car.draw(this.carContext, \"red\");\n        if (car.controls.brain) {\n            Visualizer_1.Visualizer.drawNetwork(this.networkContext, car.controls.brain);\n        }\n        if (this.cars.every(function (car) { return car.collision; }))\n            this.reset();\n        this.carContext.fillStyle = \"white\";\n        this.carContext.font = \"30px Arial\";\n        this.carContext.fillText(\"Gen: \".concat(this.generation), 50, 70);\n        this.carContext.fillText(\"Best distance: \".concat(this.bestCar.distance.toFixed(2)), 50, 100);\n        requestAnimationFrame(this.simulate);\n    };\n    SelfDrivingSimulation.prototype.reset = function () {\n        var currentBest = this.getBestCar(false);\n        if (currentBest.distance > this.bestCar.distance) {\n            this.bestCar = currentBest;\n        }\n        this.generation++;\n        this.traffic = this.generateTraffic(this.track);\n        this.cars = this.generateCars(this.numCars);\n        this.cars[0].controls.brain = this.bestCar.controls.brain;\n        for (var i = 0; i < this.cars.length; i++) {\n            if (i != 0) {\n                NeuralNetwork_1.NeuralNetwork.mutate(this.cars[i].controls.brain, 0.2);\n            }\n        }\n    };\n    SelfDrivingSimulation.prototype.generateCars = function (numCars) {\n        var newCars = [];\n        for (var i = 0; i < numCars; i++) {\n            newCars.push(new Car_1.Car(this.plane, 0, 0, 5, this.specimens, 0, this.mode));\n            this.specimens++;\n        }\n        return newCars;\n    };\n    SelfDrivingSimulation.prototype.generateTraffic = function (roads) {\n        var _this = this;\n        var traffic = [];\n        roads.forEach(function (road, index) {\n            if (road instanceof StraightRoad_1.StraightRoad && index != 0) {\n                var lane = (0, random_1.randomIntBetween)(1, 3);\n                var _a = road.getLaneCenter((index % 2) + 1), x = _a.x, y = _a.y, rotation = _a.rotation;\n                traffic.push(new Car_1.Car(_this.plane, x, y, 3, 0, rotation, \"dummy\" /* CONTROLS.DUMMY */));\n            }\n        });\n        return traffic;\n    };\n    SelfDrivingSimulation.prototype.getBestCar = function (includeCollision) {\n        return this.cars.reduce(function (prev, curr) {\n            var longer = prev.distance < curr.distance;\n            var noCollision = !curr.collision;\n            if (includeCollision) {\n                if (longer && noCollision)\n                    return curr;\n                else\n                    return prev;\n            }\n            else {\n                if (longer)\n                    return curr;\n                else\n                    return prev;\n            }\n        }, this.cars[0]);\n    };\n    return SelfDrivingSimulation;\n}());\nexports.SelfDrivingSimulation = SelfDrivingSimulation;\n\n\n//# sourceURL=webpack://self-driving/./src/classes/Simulation/SelfDrivingSimulation.ts?");

/***/ }),

/***/ "./src/classes/Visualizer.ts":
/*!***********************************!*\
  !*** ./src/classes/Visualizer.ts ***!
  \***********************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Visualizer = void 0;\nvar getRGBA_1 = __webpack_require__(/*! ../utils/getRGBA */ \"./src/utils/getRGBA.ts\");\nvar lerp_1 = __webpack_require__(/*! ../utils/lerp */ \"./src/utils/lerp.ts\");\nvar Visualizer = /** @class */ (function () {\n    function Visualizer() {\n    }\n    Visualizer.drawNetwork = function (context, network) {\n        var margin = 50;\n        var left = margin;\n        var top = margin;\n        var width = context.canvas.width - margin * 2;\n        var height = context.canvas.height - margin * 2;\n        var layerHeight = height / network.layers.length;\n        for (var i = network.layers.length - 1; i >= 0; i--) {\n            var layerTop = top +\n                (0, lerp_1.lerp)(height - layerHeight, 0, network.layers.length == 1 ? 0.5 : i / (network.layers.length - 1));\n            context.setLineDash([7, 3]);\n            Visualizer.drawLevel(context, network.layers[i], left, layerTop, width, layerHeight, i == network.layers.length - 1 ? [\"⬆️\", \"⬅️\", \"➡️\", \"⬇️\"] : []\n            //[\"⬆️\", \"⬅️\", \"➡️\", \"⬇️\"]\n            //[\"🠉\", \"🠈\", \"🠊\", \"🠋\"]\n            );\n        }\n    };\n    Visualizer.drawLevel = function (context, layer, left, top, width, height, outputLabels) {\n        var right = left + width;\n        var bottom = top + height;\n        var inputs = layer.inputs, outputs = layer.outputs, weights = layer.weights, biases = layer.biases;\n        for (var i = 0; i < inputs.length; i++) {\n            for (var j = 0; j < outputs.length; j++) {\n                context.beginPath();\n                context.moveTo(Visualizer.getNodeX(inputs, i, left, right), bottom);\n                context.lineTo(Visualizer.getNodeX(outputs, j, left, right), top);\n                context.lineWidth = 2;\n                context.strokeStyle = (0, getRGBA_1.getRGBA)(weights[i][j]);\n                context.stroke();\n            }\n        }\n        var nodeRadius = 18;\n        for (var i = 0; i < inputs.length; i++) {\n            var x = Visualizer.getNodeX(inputs, i, left, right);\n            context.beginPath();\n            context.arc(x, bottom, nodeRadius, 0, Math.PI * 2);\n            context.fillStyle = \"black\";\n            context.fill();\n            context.beginPath();\n            context.arc(x, bottom, nodeRadius * 0.6, 0, Math.PI * 2);\n            context.fillStyle = (0, getRGBA_1.getRGBA)(inputs[i]);\n            context.fill();\n        }\n        for (var i = 0; i < outputs.length; i++) {\n            var x = Visualizer.getNodeX(outputs, i, left, right);\n            context.beginPath();\n            context.arc(x, top, nodeRadius, 0, Math.PI * 2);\n            context.fillStyle = \"black\";\n            context.fill();\n            context.beginPath();\n            context.arc(x, top, nodeRadius * 0.6, 0, Math.PI * 2);\n            context.fillStyle = (0, getRGBA_1.getRGBA)(outputs[i]);\n            context.fill();\n            context.beginPath();\n            context.lineWidth = 2;\n            context.arc(x, top, nodeRadius * 0.8, 0, Math.PI * 2);\n            context.strokeStyle = (0, getRGBA_1.getRGBA)(biases[i]);\n            context.setLineDash([3, 3]);\n            context.stroke();\n            context.setLineDash([]);\n            if (outputLabels[i]) {\n                context.beginPath();\n                context.textAlign = \"center\";\n                context.textBaseline = \"middle\";\n                context.fillStyle = \"black\";\n                context.strokeStyle = \"white\";\n                context.font = nodeRadius * 0.75 + \"px Arial\";\n                context.fillText(outputLabels[i], x, top + nodeRadius * 0.1);\n                context.lineWidth = 0.5;\n                context.strokeText(outputLabels[i], x, top + nodeRadius * 0.1);\n            }\n        }\n    };\n    Visualizer.getNodeX = function (nodes, index, left, right) {\n        return (0, lerp_1.lerp)(left, right, nodes.length == 1 ? 0.5 : index / (nodes.length - 1));\n    };\n    return Visualizer;\n}());\nexports.Visualizer = Visualizer;\n\n\n//# sourceURL=webpack://self-driving/./src/classes/Visualizer.ts?");

/***/ }),

/***/ "./src/tracks/MushroomCup/marioCircuit1.ts":
/*!*************************************************!*\
  !*** ./src/tracks/MushroomCup/marioCircuit1.ts ***!
  \*************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.MarioCircuit1Track = void 0;\nvar TurnRoad_1 = __webpack_require__(/*! ../../classes/Road/TurnRoad */ \"./src/classes/Road/TurnRoad.ts\");\nvar StraightRoad_1 = __webpack_require__(/*! ../../classes/Road/StraightRoad */ \"./src/classes/Road/StraightRoad.ts\");\nvar MarioCircuit1Track = /** @class */ (function () {\n    function MarioCircuit1Track() {\n    }\n    MarioCircuit1Track.prototype.create = function (plane, width, lanes) {\n        var start = { x: 0, y: 0, rotation: 0 };\n        var SR0 = new StraightRoad_1.StraightRoad(plane, start, width, lanes);\n        var SR1 = new StraightRoad_1.StraightRoad(plane, SR0.offset, width, lanes);\n        var SR2 = new StraightRoad_1.StraightRoad(plane, SR1.offset, width, lanes);\n        var SR3 = new StraightRoad_1.StraightRoad(plane, SR2.offset, width, lanes);\n        var TR1 = new TurnRoad_1.TurnRoad(plane, SR3.offset, width, lanes, \"CW\");\n        var SR4 = new StraightRoad_1.StraightRoad(plane, TR1.offset, width, lanes);\n        var SR5 = new StraightRoad_1.StraightRoad(plane, SR4.offset, width, lanes);\n        var SR6 = new StraightRoad_1.StraightRoad(plane, SR5.offset, width, lanes);\n        var SR7 = new StraightRoad_1.StraightRoad(plane, SR6.offset, width, lanes);\n        var SR8 = new StraightRoad_1.StraightRoad(plane, SR7.offset, width, lanes);\n        var SR9 = new StraightRoad_1.StraightRoad(plane, SR8.offset, width, lanes);\n        var TR2 = new TurnRoad_1.TurnRoad(plane, SR9.offset, width, lanes, \"CW\");\n        var SR10 = new StraightRoad_1.StraightRoad(plane, TR2.offset, width, lanes);\n        var SR11 = new StraightRoad_1.StraightRoad(plane, SR10.offset, width, lanes);\n        var SR12 = new StraightRoad_1.StraightRoad(plane, SR11.offset, width, lanes);\n        var TR3 = new TurnRoad_1.TurnRoad(plane, SR12.offset, width, lanes, \"CW\");\n        var SR13 = new StraightRoad_1.StraightRoad(plane, TR3.offset, width, lanes);\n        var SR14 = new StraightRoad_1.StraightRoad(plane, SR13.offset, width, lanes);\n        var SR15 = new StraightRoad_1.StraightRoad(plane, SR14.offset, width, lanes);\n        var TR4 = new TurnRoad_1.TurnRoad(plane, SR15.offset, width, lanes, \"CCW\"); // problem child\n        var SR16 = new StraightRoad_1.StraightRoad(plane, TR4.offset, width, lanes);\n        var SR17 = new StraightRoad_1.StraightRoad(plane, SR16.offset, width, lanes);\n        var TR5 = new TurnRoad_1.TurnRoad(plane, SR17.offset, width, lanes, \"CW\");\n        var TR6 = new TurnRoad_1.TurnRoad(plane, TR5.offset, width, lanes, \"CW\");\n        var SR18 = new StraightRoad_1.StraightRoad(plane, TR6.offset, width, lanes);\n        var SR19 = new StraightRoad_1.StraightRoad(plane, SR18.offset, width, lanes);\n        var SR20 = new StraightRoad_1.StraightRoad(plane, SR19.offset, width, lanes);\n        var SR21 = new StraightRoad_1.StraightRoad(plane, SR20.offset, width, lanes);\n        return [\n            SR0,\n            SR1,\n            SR2,\n            TR1,\n            SR3,\n            SR4,\n            SR5,\n            SR6,\n            SR7,\n            SR8,\n            SR9,\n            TR2,\n            SR10,\n            SR11,\n            SR12,\n            TR3,\n            SR13,\n            SR14,\n            SR15,\n            TR4,\n            SR16,\n            SR17,\n            TR5,\n            TR6,\n            SR18,\n            SR19,\n            SR20,\n            SR21,\n        ];\n    };\n    return MarioCircuit1Track;\n}());\nexports.MarioCircuit1Track = MarioCircuit1Track;\n\n\n//# sourceURL=webpack://self-driving/./src/tracks/MushroomCup/marioCircuit1.ts?");

/***/ }),

/***/ "./src/tracks/donut.ts":
/*!*****************************!*\
  !*** ./src/tracks/donut.ts ***!
  \*****************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.DonutTrack = void 0;\nvar TurnRoad_1 = __webpack_require__(/*! ../classes/Road/TurnRoad */ \"./src/classes/Road/TurnRoad.ts\");\nvar DonutTrack = /** @class */ (function () {\n    function DonutTrack() {\n    }\n    DonutTrack.prototype.create = function (plane, width, lanes) {\n        var start = { x: 0, y: 0, rotation: 0 };\n        var turnRoad1 = new TurnRoad_1.TurnRoad(plane, start, width, lanes, \"CW\");\n        var turnRoad2 = new TurnRoad_1.TurnRoad(plane, turnRoad1.offset, width, lanes, \"CW\");\n        var turnRoad3 = new TurnRoad_1.TurnRoad(plane, turnRoad2.offset, width, lanes, \"CW\");\n        var turnRoad4 = new TurnRoad_1.TurnRoad(plane, turnRoad3.offset, width, lanes, \"CW\");\n        return [turnRoad1, turnRoad2, turnRoad3, turnRoad4];\n    };\n    return DonutTrack;\n}());\nexports.DonutTrack = DonutTrack;\n\n\n//# sourceURL=webpack://self-driving/./src/tracks/donut.ts?");

/***/ }),

/***/ "./src/tracks/index.ts":
/*!*****************************!*\
  !*** ./src/tracks/index.ts ***!
  \*****************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.getTrack = exports.TRACKS = void 0;\nvar donut_1 = __webpack_require__(/*! ./donut */ \"./src/tracks/donut.ts\");\nvar marioCircuit1_1 = __webpack_require__(/*! ./MushroomCup/marioCircuit1 */ \"./src/tracks/MushroomCup/marioCircuit1.ts\");\nvar nascar_1 = __webpack_require__(/*! ./nascar */ \"./src/tracks/nascar.ts\");\nvar TRACKS;\n(function (TRACKS) {\n    TRACKS[\"DONUT\"] = \"donut\";\n    TRACKS[\"NASCAR\"] = \"nascar\";\n    TRACKS[\"MARIO_CIRCUIT_1\"] = \"mario-circuit-1\";\n})(TRACKS = exports.TRACKS || (exports.TRACKS = {}));\nfunction getTrack(track) {\n    switch (track) {\n        case TRACKS.DONUT:\n            return new donut_1.DonutTrack();\n        case TRACKS.NASCAR:\n            return new nascar_1.NascarTrack();\n        case TRACKS.MARIO_CIRCUIT_1:\n            return new marioCircuit1_1.MarioCircuit1Track();\n        default:\n            return new donut_1.DonutTrack();\n    }\n}\nexports.getTrack = getTrack;\n\n\n//# sourceURL=webpack://self-driving/./src/tracks/index.ts?");

/***/ }),

/***/ "./src/tracks/nascar.ts":
/*!******************************!*\
  !*** ./src/tracks/nascar.ts ***!
  \******************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.NascarTrack = void 0;\nvar StraightRoad_1 = __webpack_require__(/*! ../classes/Road/StraightRoad */ \"./src/classes/Road/StraightRoad.ts\");\nvar TurnRoad_1 = __webpack_require__(/*! ../classes/Road/TurnRoad */ \"./src/classes/Road/TurnRoad.ts\");\nvar NascarTrack = /** @class */ (function () {\n    function NascarTrack() {\n    }\n    NascarTrack.prototype.create = function (plane, width, lanes) {\n        var start = { x: 0, y: 0, rotation: 0 };\n        var road1 = new StraightRoad_1.StraightRoad(plane, start, width, lanes);\n        var turnRoad1 = new TurnRoad_1.TurnRoad(plane, road1.offset, width, lanes, \"CCW\");\n        var turnRoad2 = new TurnRoad_1.TurnRoad(plane, turnRoad1.offset, width, lanes, \"CCW\");\n        var road2 = new StraightRoad_1.StraightRoad(plane, turnRoad2.offset, width, lanes);\n        var turnRoad3 = new TurnRoad_1.TurnRoad(plane, road2.offset, width, lanes, \"CCW\");\n        var turnRoad4 = new TurnRoad_1.TurnRoad(plane, turnRoad3.offset, width, lanes, \"CCW\");\n        return [road1, turnRoad1, turnRoad2, road2, turnRoad3, turnRoad4];\n    };\n    return NascarTrack;\n}());\nexports.NascarTrack = NascarTrack;\n\n\n//# sourceURL=webpack://self-driving/./src/tracks/nascar.ts?");

/***/ }),

/***/ "./src/utils/distance.ts":
/*!*******************************!*\
  !*** ./src/utils/distance.ts ***!
  \*******************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.distance = void 0;\nfunction distance(A, B) {\n    var aSquare = Math.pow(A.x - B.x, 2);\n    var bSquare = Math.pow(A.y - B.y, 2);\n    return Math.sqrt(aSquare + bSquare);\n}\nexports.distance = distance;\n\n\n//# sourceURL=webpack://self-driving/./src/utils/distance.ts?");

/***/ }),

/***/ "./src/utils/getRGBA.ts":
/*!******************************!*\
  !*** ./src/utils/getRGBA.ts ***!
  \******************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.getRGBA = void 0;\nfunction getRGBA(value) {\n    var alpha = Math.abs(value);\n    var R = value < 0 ? 0 : 255;\n    var G = R;\n    var B = value > 0 ? 0 : 255;\n    return \"rgba(\" + R + \",\" + G + \",\" + B + \",\" + alpha + \")\";\n}\nexports.getRGBA = getRGBA;\n\n\n//# sourceURL=webpack://self-driving/./src/utils/getRGBA.ts?");

/***/ }),

/***/ "./src/utils/intersections.ts":
/*!************************************!*\
  !*** ./src/utils/intersections.ts ***!
  \************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.pointOnSegment = exports.findCircleLineIntersections = exports.polygonsIntersect = exports.linesIntersect = void 0;\nvar distance_1 = __webpack_require__(/*! ./distance */ \"./src/utils/distance.ts\");\nvar lerp_1 = __webpack_require__(/*! ./lerp */ \"./src/utils/lerp.ts\");\nfunction linesIntersect(A, B, C, D) {\n    var tTop = (D.x - C.x) * (A.y - C.y) - (D.y - C.y) * (A.x - C.x);\n    var uTop = (C.y - A.y) * (A.x - B.x) - (C.x - A.x) * (A.y - B.y);\n    var bottom = (D.y - C.y) * (B.x - A.x) - (D.x - C.x) * (B.y - A.y);\n    if (bottom != 0) {\n        var t = tTop / bottom;\n        var u = uTop / bottom;\n        if (t >= 0 && t <= 1 && u >= 0 && u <= 1) {\n            return {\n                x: (0, lerp_1.lerp)(A.x, B.x, t),\n                y: (0, lerp_1.lerp)(A.y, B.y, t),\n            };\n        }\n    }\n    return undefined;\n}\nexports.linesIntersect = linesIntersect;\nfunction polygonsIntersect(polygon1, polygon2) {\n    for (var i = 0; i < polygon1.length; i++) {\n        for (var j = 0; j < polygon2.length; j++) {\n            var touch = linesIntersect(polygon1[i], polygon1[(i + 1) % polygon1.length], polygon2[j], polygon2[(j + 1) % polygon2.length]);\n            if (touch) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\nexports.polygonsIntersect = polygonsIntersect;\nfunction findCircleLineIntersections(origin, radius, line) {\n    var slope = (line[1].y - line[0].y) / (line[1].x - line[0].x);\n    var yIntercept = line[0].y - slope * line[0].x;\n    var A = 1 + Math.pow(slope, 2);\n    if (A == Infinity)\n        return [];\n    var B = 2 * (slope * (yIntercept - origin.y) - origin.x);\n    var C = Math.pow(origin.x, 2) +\n        Math.pow(yIntercept - origin.y, 2) -\n        Math.pow(radius, 2);\n    var D = Math.pow(B, 2) - 4 * A * C;\n    if (D == 0) {\n        var intersection = [(-B + Math.sqrt(D)) / (2 * A)];\n        return intersection\n            .map(function (x) { return ({\n            x: x,\n            y: slope * x + yIntercept,\n        }); })\n            .filter(function (point) { return Math.abs((0, distance_1.distance)(point, origin) - radius) < 0.0001; });\n    }\n    else if (D >= 0) {\n        var intersections = [\n            (-B + Math.sqrt(D)) / (2 * A),\n            (-B - Math.sqrt(D)) / (2 * A),\n        ];\n        return intersections\n            .map(function (x) { return ({ x: x, y: slope * x + yIntercept }); })\n            .filter(function (point) { return Math.abs((0, distance_1.distance)(point, origin) - radius) < 0.0001; });\n    }\n    return [];\n}\nexports.findCircleLineIntersections = findCircleLineIntersections;\nfunction pointOnSegment(point, segment) {\n    var distanceA = (0, distance_1.distance)(point, segment[0]);\n    var distanceB = (0, distance_1.distance)(point, segment[1]);\n    var distances = distanceA + distanceB - (0, distance_1.distance)(segment[0], segment[1]);\n    return Math.abs(distances) < 0.00000001;\n}\nexports.pointOnSegment = pointOnSegment;\n\n\n//# sourceURL=webpack://self-driving/./src/utils/intersections.ts?");

/***/ }),

/***/ "./src/utils/lerp.ts":
/*!***************************!*\
  !*** ./src/utils/lerp.ts ***!
  \***************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.lerp = void 0;\nfunction lerp(A, B, t) {\n    return A + (B - A) * t;\n}\nexports.lerp = lerp;\n\n\n//# sourceURL=webpack://self-driving/./src/utils/lerp.ts?");

/***/ }),

/***/ "./src/utils/random.ts":
/*!*****************************!*\
  !*** ./src/utils/random.ts ***!
  \*****************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.randomIntBetween = void 0;\nfunction randomIntBetween(min, max) {\n    // min and max included\n    return Math.floor(Math.random() * (max - min + 1) + min);\n}\nexports.randomIntBetween = randomIntBetween;\n\n\n//# sourceURL=webpack://self-driving/./src/utils/random.ts?");

/***/ }),

/***/ "./src/utils/reductions.ts":
/*!*********************************!*\
  !*** ./src/utils/reductions.ts ***!
  \*********************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.maxReduction = exports.minReduction = void 0;\nfunction minReduction(prev, curr) {\n    return curr < prev ? curr : prev;\n}\nexports.minReduction = minReduction;\nfunction maxReduction(prev, curr) {\n    return curr > prev ? curr : prev;\n}\nexports.maxReduction = maxReduction;\n\n\n//# sourceURL=webpack://self-driving/./src/utils/reductions.ts?");

/***/ }),

/***/ "./src/utils/transformations.ts":
/*!**************************************!*\
  !*** ./src/utils/transformations.ts ***!
  \**************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.makePositiveRad = exports.shift = exports.reflectOverX = exports.rotateClockwiseAround = exports.rotateClockwise = void 0;\nfunction rotateClockwise(point, rotation) {\n    var x = point.x * Math.cos(-rotation) - point.y * Math.sin(-rotation);\n    var y = point.x * Math.sin(-rotation) + point.y * Math.cos(-rotation);\n    return { x: x, y: y };\n}\nexports.rotateClockwise = rotateClockwise;\nfunction rotateClockwiseAround(origin, point, rotation) {\n    var shiftedPoint = shift(point, -origin.x, -origin.y);\n    var x = shiftedPoint.x * Math.cos(-rotation) - shiftedPoint.y * Math.sin(-rotation);\n    var y = shiftedPoint.x * Math.sin(-rotation) + shiftedPoint.y * Math.cos(-rotation);\n    return shift({ x: x, y: y }, origin.x, origin.y);\n}\nexports.rotateClockwiseAround = rotateClockwiseAround;\nfunction reflectOverX(point) {\n    var x = point.x;\n    var y = -point.y;\n    return { x: x, y: y };\n}\nexports.reflectOverX = reflectOverX;\nfunction shift(point, shiftX, shiftY) {\n    var x = point.x + shiftX;\n    var y = point.y + shiftY;\n    return { x: x, y: y };\n}\nexports.shift = shift;\nfunction makePositiveRad(rad, keep2PI) {\n    var positiveRad = (rad + 2 * Math.PI) % (2 * Math.PI);\n    if (positiveRad == 0 && keep2PI)\n        return 2 * Math.PI;\n    else\n        return positiveRad;\n}\nexports.makePositiveRad = makePositiveRad;\n\n\n//# sourceURL=webpack://self-driving/./src/utils/transformations.ts?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			id: moduleId,
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/nonce */
/******/ 	(() => {
/******/ 		__webpack_require__.nc = undefined;
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/app.ts");
/******/ 	
/******/ })()
;